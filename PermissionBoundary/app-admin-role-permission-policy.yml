AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This stack creates the permission policy for admins of an
  application team admins to create roles and policies.
Parameters:
  ApplicationName:
    Type: String
Resources:
  AdminPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub '${ApplicationName}-admin-policy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'AllowCreateRoles'
            Effect: 'Allow'
            Action:
              - 'iam:CreateRole'
              - 'iam:DetachRolePolicy'
              - 'iam:AttachRolePolicy'
              - 'iam:PutRolePolicy'
            Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${ApplicationName}*'
            Condition:
              StringEquals:
                iam:PermissionsBoundary:
                  - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/${ApplicationName}-team-wide-permission-boundary-policy'
              ArnNotLike:
                iam:PolicyARN:
                  - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/${ApplicationName}-admin-policy'
                  - 'arn:aws:iam::aws:policy/AdministratorAccess'
          - Sid: 'AllowAttachDetachPolicy'
            Effect: 'Allow'
            Action:
              - 'iam:DetachRolePolicy'
              - 'iam:AttachRolePolicy'
            Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${ApplicationName}*'
            Condition:
              StringEquals:
                iam:PermissionsBoundary:
                  - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/${ApplicationName}-team-admin-permission-boundary-policy'
              ArnNotLike:
                iam:PolicyARN:
                  - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/${ApplicationName}-admin-policy'
                  - 'arn:aws:iam::aws:policy/AdministratorAccess'
          - Sid: 'AllowCreateCustomerManagedPolicies'
            Effect: 'Allow'
            Action:
              - 'iam:CreatePolicy'
              - 'iam:DeletePolicy'
              - 'iam:CreatePolicyVersion'
              - 'iam:DeletePolicyVersion'
              - 'iam:SetDefaultPolicyVersion'
            Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:policy/${ApplicationName}*'
          - Sid: 'RoleandPolicyActionswithnoPermissionBoundarySupport'
            Effect: 'Allow'
            Action:
              - 'iam:DeleteRole'
              - 'iam:UpdateRole'
            Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${ApplicationName}*'
          - Sid: 'DenyPermissionBoundaryandPolicyDeleteModify'
            Effect: 'Deny'
            Action:
              - 'iam:DeletePolicy'
              - 'iam:CreatePolicyVersion'
              - 'iam:DeletePolicyVersion'
              - 'iam:SetDefaultPolicyVersion'
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/${ApplicationName}-team-admin-permission-boundary-policy'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/${ApplicationName}-team-wide-permission-boundary-policy'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/${ApplicationName}-admin-policy'
          - Sid: 'DenyRolePermissionBoundaryDelete'
            Effect: 'Deny'
            Action:
              - 'iam:DeleteRolePermissionsBoundary'
            Resource: '*'
Outputs:
  AdminPolicyArn:
    Value: !Ref AdminPolicy
